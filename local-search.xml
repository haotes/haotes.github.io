<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>网站制作记录</title>
    <link href="/2025/08/28/%E7%BD%91%E7%AB%99%E5%88%B6%E4%BD%9C%E8%AE%B0%E5%BD%95/"/>
    <url>/2025/08/28/%E7%BD%91%E7%AB%99%E5%88%B6%E4%BD%9C%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="使用Hexo-GitHub-Pages创建网站"><a href="#使用Hexo-GitHub-Pages创建网站" class="headerlink" title="使用Hexo + GitHub Pages创建网站"></a>使用Hexo + GitHub Pages创建网站</h1><h2 id="第一：准备环境"><a href="#第一：准备环境" class="headerlink" title="第一：准备环境"></a>第一：准备环境</h2><h3 id="1-安装-Node-js"><a href="#1-安装-Node-js" class="headerlink" title="1.安装 Node.js"></a>1.安装 Node.js</h3><ul><li><strong>说明</strong>：Hexo是基于Node.js的，所以需要先安装它</li><li><strong>操作</strong>：访问<a href="https://nodejs.org/zh-cn">Node.js官网</a>，下载并安装LTS（长期支持版），安装选项保持默认</li><li><strong>验证</strong>：安装后， <code>cmd</code> 输入  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">node -v<br>npm -v<br></code></pre></td></tr></table></figure>  如果两行命令都显示了版本号，则安装成功</li></ul><h3 id="2-安装-Git"><a href="#2-安装-Git" class="headerlink" title="2.安装 Git"></a>2.安装 Git</h3><ul><li><strong>说明</strong>：Git是一个版本控制系统，用于将代码上传到GitHub</li><li><strong>操作</strong>：访问<a href="https://git-scm.com/">Git官网</a>，安装选项保持默认</li><li><strong>验证</strong>：安装后， <code>cmd</code> 输入  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git --version<br></code></pre></td></tr></table></figure>  如果显示版本号，说明安装成功</li></ul><h3 id="3-安装-Hexo"><a href="#3-安装-Hexo" class="headerlink" title="3.安装 Hexo"></a>3.安装 Hexo</h3><p>  通过Node.js的包管理器 <strong>npm</strong> 安装Hexo</p><ul><li><strong>操作</strong>： <code>cmd</code> 输入  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure></li><li><strong>说明</strong>： <strong>-g</strong> 代表全局安装，这样可以在任何地方使用 <strong>hexo</strong> 命令</li></ul><h2 id="第二：本地初始化网站"><a href="#第二：本地初始化网站" class="headerlink" title="第二：本地初始化网站"></a>第二：本地初始化网站</h2><ul><li><strong>说明</strong>：让Hexo在文件夹里生成网站的所有初始文件</li><li><strong>操作</strong>：<ol><li><strong>创建目录</strong>：比如 <strong>D:\MyWebsite</strong> 或 <strong>~&#x2F;Documents&#x2F;MyWebsite</strong> 然后 <code>cmd</code> 进入到创建的目录</li><li><strong>下载文件与依赖包</strong>： <code>cmd</code> 执行以下命令 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init my-site  <span class="hljs-comment"># 下载所有必需文件，&quot;my-site&quot;是网站所在文件夹名，可自定义</span><br><span class="hljs-built_in">cd</span> my-site         <span class="hljs-comment"># 进入新创建的文件夹</span><br>npm install        <span class="hljs-comment"># 安装依赖</span><br></code></pre></td></tr></table></figure></li><li><strong>本地预览</strong>：现在电脑已经有了一个最简单的网站， <code>cmd</code> 输入以下命令启动本地服务器 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo server  <span class="hljs-comment">#或者简写 hexo s</span><br></code></pre></td></tr></table></figure> 命令行会提示 <strong><code>Hexo is running at http://localhost:4000</code></strong> 访问这个网址就能看到网站雏形了</li></ol></li></ul><h2 id="第三：连接GitHub-创建仓库"><a href="#第三：连接GitHub-创建仓库" class="headerlink" title="第三：连接GitHub - 创建仓库"></a>第三：连接GitHub - 创建仓库</h2><p>这是最关键的一步，需要创建一个特殊的仓库存放网站代码</p><ol><li>登录GitHub账户</li><li>点击右上角的 <strong>+</strong> -&gt; <strong>New repository</strong></li><li><strong>仓库名称必须严格遵守格式</strong>： <code>xxx.github.io</code> (如果用户名是 <code>zhangsan</code> ，那么仓库名就是<code>zhangsan.github.io</code>)</li><li>描述可以随便写，比如 <code>My personal note site</code></li><li>选择 <strong>Public</strong> (公开，私有仓库需要付费才能用于GitHub Pages)</li><li>下面的 <strong>不要勾选</strong> ，因为会自动生成</li><li>点击 <code>Create repository</code></li></ol><h2 id="第四：配置部署设置"><a href="#第四：配置部署设置" class="headerlink" title="第四：配置部署设置"></a>第四：配置部署设置</h2><p>现在，我们要告诉本地的Hexo项目，将来要把网站文件推送到哪个GitHub仓库</p><ol><li>在自己的Hexo项目文件夹（ <code>my-site</code> ）中，打开 <code>_config.yml</code> 文件，这是Hexo的主配置文件</li><li>在文件最底部找到 <code>deploy</code> 部分</li><li>按照以下格式修改（ <strong>注意：每个冒号后面必须有一个空格</strong> ）   <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/你的用户名/你的用户名.github.io.git</span><br>  <span class="hljs-comment"># 例如: https://github.com/zhangsan/zhangsan.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure>   将 <code>你的用户名</code> 替换为 <code>自己的GitHub用户名</code> ，然后保存配置文件</li><li><code>cmd</code> 进入项目根目录（ 即<code>my-site</code> 文件夹）下，安装Hexo的Git部署插件   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure></li></ol><h2 id="第五：撰写内容并部署上线"><a href="#第五：撰写内容并部署上线" class="headerlink" title="第五：撰写内容并部署上线"></a>第五：撰写内容并部署上线</h2><ol><li><strong>创建一篇新笔记</strong><br>   <code>cmd</code> 输入命令   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;我的第一篇笔记&quot;</span><br></code></pre></td></tr></table></figure>   这个命令会在 <code>source/_posts</code> 目录下创建一个名为 <code>我的第一篇笔记.md</code> 的文件，打开后使用 <strong>Markdown</strong> 语法写正文，比如   <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: 我的第一篇笔记<br>date: 2025-8-27 14:00:00<br><span class="hljs-section">tags: [Hexo, 教程]</span><br><span class="hljs-section">---</span><br><span class="hljs-section"># 欢迎来到我的学习笔记站</span><br><br>这是我的第一篇文章！我用的是 <span class="hljs-strong">**Hexo**</span> 框架和 <span class="hljs-strong">**Markdown**</span> 语法。<br><br><span class="hljs-section">## 今天学到了什么</span><br><span class="hljs-bullet">-</span> 如何安装 Node.js<br><span class="hljs-bullet">-</span> 如何配置 Git<br><span class="hljs-bullet">-</span> 感受到了命令行的力量！<br></code></pre></td></tr></table></figure>   记得保存文件</li><li><strong>生成和部署</strong><br>   <code>cmd</code> 依次执行以下命令   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean  <span class="hljs-comment"># 清楚缓存文件</span><br>hexo generate  <span class="hljs-comment"># 生成静态网站文件（会创建一个`public`文件夹）</span><br>hexo deploy  <span class="hljs-comment"># 将`public`文件夹中的内容部署到GitHub</span><br><span class="hljs-comment"># 简写： hexo d -g (代表先generate再deploy)</span><br></code></pre></td></tr></table></figure>   <strong>注意</strong>：第一次部署时，会弹出窗口让登录GitHub账户并授权，操作步骤如下<ol><li><strong>选择选项</strong>：在命令行弹出的窗口中，选择 <code>Sign in with your browser</code> </li><li><strong>等待跳转</strong>：系统会<strong>自动打开默认浏览器</strong>，跳转到GitHub授权页面。如果没有自动打开，命令行里也会有个链接，需要手动复制打开</li><li><strong>授权登录</strong>：</li></ol><ul><li>如果浏览器已经<strong>登录了 GitHub</strong>，它会问是否授权 <strong>Git Credential Manager</strong> 访问账户</li><li>如果<strong>没有登录</strong>，它会先让输入 GitHub 的用户名和密码登录</li><li><strong>重要</strong>：无论如何，最后都会看到一个页面，询问是否授权给 <strong>Git Credential Manager</strong>。点击 <strong>Authorize</strong> （授权）或 <strong>Authorize GitCredentialManager</strong> 按钮</li></ul><ol start="4"><li><strong>完成验证</strong>：授权成功后，浏览器页面会显示类似 “Authentication complete” 的提示</li><li><strong>回到命令行</strong>：回到 <code>cmd</code> 窗口，发现它已经自动继续运行，说明登录成功，<code>hexo deploy</code> 命令正在将网站文件上传到 GitHub</li></ol></li><li><strong>访问网站</strong><br>  部署命令完成后，等待一两分钟，让GitHub Pages完成构建<br>  然后再浏览器访问： <code>https://你的用户名.github.io</code> ，这时个人网站就正式上线</li></ol>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网站制作</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇笔记</title>
    <link href="/2025/08/27/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E7%AC%94%E8%AE%B0/"/>
    <url>/2025/08/27/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="欢迎来到我的学习笔记站"><a href="#欢迎来到我的学习笔记站" class="headerlink" title="欢迎来到我的学习笔记站"></a>欢迎来到我的学习笔记站</h1><p>这是我的第一篇文章！我用的是 <strong>Hexo</strong> 框架和 <strong>Markdown</strong> 语法。</p><h2 id="今天学到了什么"><a href="#今天学到了什么" class="headerlink" title="今天学到了什么"></a>今天学到了什么</h2><ul><li>如何安装 Node.js</li><li>如何配置 Git</li><li>感受到了命令行的力量！</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>【Hexo,教程】</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/08/27/hello-world/"/>
    <url>/2025/08/27/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
